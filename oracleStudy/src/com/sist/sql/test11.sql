-- 2023-05-17 부속질의(서브쿼리) ==> 쿼리안에 쿼리
/*
    JOIN은 SELECT에서만 사용이 가능
    SubQuery : SELECT, INSERT, UPDEATE, DELETE, 테이블 대신, 컬럼대신 사용이 가능
    => 서브쿼리가 많이 사용이 된다

    => 종류
        1) 단일행 서브쿼리 => 결과값이 1개 (컬럼=1)
        2) 다중행 서브쿼리 => 결과값이 여러개 (컬럼=1)
            형식
            MainQuery WHERE 컬럼 =(SubQuery)
                                   --------
            ---------                 1 
                2 => SubQuery에서 나온 결과를 받아서 MainQuery를 실행하는 방식
        --------------------- WHERE
        3) 스칼라 서브쿼리 : 컬럼대신 사용 (다른 테이블 데이터를 읽어 올때 : JOIN대신)
            형식
            SELECT (SELECT~),(SELECT~)
        --------------------- SELECT
        4) 테이블 대신 사용하는 서브쿼리 (인라인뷰) => 가장많이 등장 (페이지 나누기)
            형식
            SELECT~
            FROM (SELECT~)
        --------------------- FROM
    
*/
-- 단일행 서브쿼리
-- 형식
/* 
    SELECT ~
    FROM table_name
    WHERE 컬럼=(SELECT~)

    자바에서 오라클 연동 => 웹프로그래머
    SQL문장을 몇번 전송
    SQL문장을 2번 전송
     => 연결 ==> 시간이 오래 걸린다
        SQL문장 전송
        결과값 받기
        연결 해제
        연결
        SQL문장 전송
        결과값 받기
        연결 해제
        -------------
        데이터를 합쳐서 사용 (JOIN)
        SQL을 합쳐서 사용 (SubQuery)
*/
-- emp에서 평균급여보다 적게 받는 사원의 이름, 급여, 입사일 AVG
-- 1. 평균급여
-- 2. 비교후 검색

/*
    다중행 서브쿼리 : 컬럼 1개 => 결과값이 여러개일때 사용
    ------------------ WHERE 컬럼명 연산자 값(SELECT~~)
                                    ------ 한개를 제외하고 단일
                                           IN(여러개) 
                             컬럼명 연산자 값
    => IN (모든 데이터를 적용)
    => (10, 20, 30) => 가장 큰값, 가장 작은값
        ANY, SOME, ALL, IN
        IN => 10, 20, 30 => 전체 적용
        컬럼 < ANY(10,20,30) => 최대값 30만 적용
        컬럼 > ANY(10,20,30) => 최소값 10만 적용

        컬럼 < ALL(10,20,30) => 최소값 10
        컬럼 > ALL(10,20,30) => 최대값 30
        ---------------------------------------- MAX, MIN
*/