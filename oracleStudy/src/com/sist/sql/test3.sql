-2023-05-12 오라클 1일차 (23page)
/*
    1) 데이터베이스 => 크롤링, 필요한 데이터 수집 (파일)
    2) 데이터베이스 시스템
    오라클 / MySql / MariaDB / MS-SQL / DB2
    -------   ------- 실무 (ORM : DB를 쉽게 사용 => MyBatis / JPA /)
    => JSP (Java+HTML) => (X)
         HTML에서 작업이 가능 (ThymeLeaf)
    => SQL => 자동생성(JPA)
    => JavaScript
    => SpringFramework / SpringBoot
         설정 : XML           설정 : 자바
         STS 4.x => Spring-Boot => 교재도Spring-Boot => Spring6
     page25
     데이터베이스 개념
     ----------- 중복을 최소화
     데이터를 통합 : 통합된 데이터
     ex) 웹사이트
          회원 : 비밀번호, 이름, 성별, 생년월일, 이메일, 주소, 전화
          댓글 : ID, 이름 => 회원가입에 등록된 데이터를 읽어온다
               ----------  Foreign key(참조키) => 데이터베이스 모델링
     저장된 데이터 : 파일로 저장하는 것이 아니라 => 컴퓨터에 저장
          => 공유해서 사용 : 오라클 원격, 프로젝트 (한개의 프로젝트 => 원격 => 깃)
          => RollBack
     공용데이터 : 같은 데이터를 서로 공유해서 사용 => static
     운영데이터 : 웹사이트의 검색을 목적
     ------------------------------------------------------------------------
     특징
       => 실시간 접근성 : 자동부팅 (항상 프로그램실행중)
       => 계속적인 변화 : 회원가입, 게시물, 댓글, 예약...
       => 동시공유 : 여러사람이 동시에 사용이 가능
       => 참조 (자바 => 메모리 주소(.), 내용(값)을 참조)
       page27

     데이터베이스 구성요소
     1) DBMS : 사용자와 db를 연결해주는 소프트웨어
               ------ 일반 사용자, 웹프로그래머(****), DBA
               DBA => 설계, 데이터 수집
               웹프로그래머는 일반사용자가 DB에 접근이 가능하게 도와주는 역할
               일반 사용자는 SQL문장을 사용하지못하기 때문에
               => 웹프로그래머가 대신 SQL을 만들어주는 역할
               => '가' 입력
                    SELECT * FROM MUSIC WHERE title LIKE '%가%';
     2) DB : 데이터를 통합해서 컴퓨터에 저장
               => 이미지 형식으로 저장 (보안), 영구적인 저장 상태 (데이터를 유지)
     3) 데이터 모델(****) : 데이터추출
        웹 데이터베이스 시스템
     ------------------------DB를 웹브라우저에서 사용이 가능하게 만든 시스템'
     1. 다른 컴퓨터에 있는 데이터를 연결해서 사용 (****)
     ------------------------- 브라우저에서는 불가능 (자바를 이용해서 연결)
     2. 자바 => 웹에서 연결담당 (데이터관리)
          => HTML/CSS(X) :화면만 출력
          => 자바스크립트 (Web Store)
     
     파일시스템 => IO (FileInputStream / FileOutputStream...)
          => 단점 : 통합된 데이터를 만들 수 없다 (중복이 많다) => 관리하기 어렵다
                    => 종속성
                    보안이어렵다
          => 단점보완 : 데이터베이스 시스템
          => 빅데이터(사용가능, 사용불가능) => 추출,데이터 읽기
          => 댓글 ㅎㅎㅎ ooo ㅋㅋ
       -------------------------------------------------------------------------------
       44page
         DBMS 장점
         ---------
       1. 데이터 중복의 최소화 => primary key(기본기) 
          ----------- 이상현상 (수정, 삭제)
          == 모든데이블은 1개 이상의 중복없는 값 지정 (인덱스번호, 의의의 번호 첨부)
       2. 일관성 유지 : 모든 사용자마다 동일
       3. 독립성 : 테이블마다 독립적으로 사용이 가능 / 연결해서 사용이 가능
                                                    ------- 참조키 (foreign key)
       4. 관리기능 : 데이터복구(rollback), 백업
       5. 같은 데이터를 활용 => 프로그램 제작이 편리하다
       6. 기타 => 보안, 표준화된 명령어를 사용

       45page
         데이터베이스 시스템 구성
         응용 프로그래머 (웹개발자)
               |
         응용프로그램 제작(웹사이트) ==> 자바 ======> 오라클
                                             JDBC (Java Database Connective)
                                               | 사용이 쉽게 라이브러리
                                                  MyBatis / JPA
                                         1) Connection : 오라클 연결 담당
                                         2) Statement : SQL문장 전송 / 결과값을 받는 역할
                                         3) ResultSet : 결과값을 담는 메모리 공간    
                                            --------- 핵심
                                            자바 <===> 오라클 : JDBC / 오라클 
                                           Back-End / Front-End(JavaScript)  
               | SQL을 이용해서 오라클에 연결 => 요청
             오라클 
               | ===> 요청에 대한 데이터를 읽어서 응용프로그램으로 전송
             데이터베이스에 연결 (파일이 저장된 메모리)  
     -----------------------------------------------------------------
     데이터베이스 언어
     ----------------
        SQL (구조화된 질의언어) => 검색
                    |
     -------------------------------------------------------------
     |              |              |              |              |
    DQL            DML            DDL            DCL            TCL
    SELECT         INSERT         CREATE        GRANT           COMMIT   
    검색           UPDATE         ALTER         REVOKE          ROLLBACK
                   DELETE         DROP              
                                  RENAME
                                  TRUNCATE
     1) SELECT => 데이터 검색 (필요한 데이터만 읽기 / 파일 => 무조건 전체 데이터 읽기)
       => 형식, 순서
       => DISTINCT (중복이 안된 데이터만 읽기)
       => * => 모든 데이터 읽기
       => 컬럼 => 필요한 데이터만 읽기
       SELECT [DISTINCT|ALL] 컬럼리스트...--------5
       FROM 테이블명------------------------------1
       [
          WHERE 조건문----------------------------2 => IF
          GROUP BY 그룹컬럼|함수------------------3
          HAVING 그룹조건-------------------------4
          ORDER BY 컬럼 (ASC|DESC)----------------6 => 정렬
       ]
       웹프로그래머 => 자바 + SQL
       -------------------------- SI/SM, 솔루션, 프레임워크
        => 가장 많이 채용 : SI/SM (웹개발 => 파견) = 구디가디
        => 자체 개발 : 알고리즘, 로직 =================> 코테
        => 프레임워크 : 위탁을 받아서 회사 자체에서 개발
       -------------------------------------------------------
       49page
       데이터 모델
          1) 계층 데이터 모델 : HTML / XML => 트리형태 => DOM
             ---------------- 답변형 게시판
          ***2) 네트워크 모델
             ---------------- TCP (MASTER <==> SLAVE)
                         지시형 프로그램 (서버) ====> 클라이언트는 그대로 동작
             ---------------------------- 폭포수  
          3) 관계형 데이터 모델
          --------------------- RDBMS (데이터마다 독립적으로 사용)
               필요시마다 관계를 만들어준다(키)
          ***4) 객체 데이터 모델
          5) 객체 관계 데이터 모델
          --------------------------- 식별자 (메모리 주소)
          데이터베이스의 개념적 구조
          --------------------------
            요구사항 분석 => 수집 ==> 외부스키마 (사용자가 보는 데이터)
                   |
                  설계
                  ----
                    개념적 설계 ==> 웹사이트 (벤치마킹) => 필요한 데이터 추출
                                    기능
                    논리적 설계 ==> 데이터추출 => 데이터형, 테이블 제작, 구체화
                                    ---------- 구분(키), 문자, 날짜, 숫자
                                    title => 문자열, score => 숫자(실수)
                    물리적 설계 ==> 실제크기 (메모리에 저장)
                                    title VARCHAR2(100), score NUMBER(2,1)
                    물리적 설계 ==>     

*/