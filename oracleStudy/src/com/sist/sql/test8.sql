-- 2023-05-15 오라클 정리 (SELECT, 연산자, 함수정리)
/*
    SQL문장 => 형식 (문법사항)
    ---
    DQL : SELECT(데이터를 추출) => 검색, 목록, 상세보기
    => SELECT
        1) 형식
            column => 데이터를 구분 (파일 => |,)
            ---------------------------------------------------------------
            SELECT *(저장된 전체데이터 읽기) | column_list(원하는 목록만 출력)
            FROM table명 (table은 전체 데이터를 저장한 장소 => column별로 구분됨)
            --------------------------------------------------------------- 필수 조건
            [
                WHERE 조건문 (컬럼명|함수명 연산자 값)
                GROUP BY 그룹컬럼명|함수명
                HAVING 그룹조건
                ORDER BY 컬럼|함수명 (ASC|DESC) => 올림/내림 => 정렬
            ]
            WHERE - ORDER BY (ORDER BY - WHERE - 오류)
            WHERE - GROUP BY
            GROUP BY - ORDER BY
            =>
                SELECT =========> 5
                FROM =========> 1
                WHERE =========> 2
                GROUP BY =========> 3
                HAVING =========> 4
                ORDER BY =========> 6
        2) 연산자
            = 산술연산자 => 산술처리 (문자열 결합은 하지 않는다 => ||)
            + - * / => 'A'+1 (오류) => ASCII('A')+1 ==> 66
            '10'+10 => 20 => TO_NUMBER('10')+10
             -- 정수형으로 변경후에 연산
             -- 자동 형변환은 존재, 강제 형변환은 없다(int)(X)
             -- 실수 => 정수 : ROUND(), CEIL(), TRUNC()
             -- / => 0으로 나눌 수 없다. 정수/정수 => 실수
             -- 주로 사용되는 위치 : SELECT뒤에서 사용
                -------------- 통계 (Column단위 통계가 존재, ROW단위는 존재하지 않는다)
            --------------------------------------
                name    kor     eng     math
            --------------------------------------
                홍길동    80      80       80
            --------------------------------------
                심청이    90      90       90
            --------------------------------------
                        170     170      170 => SUM(kor)
                         85      85       85 => AVG(kor) => 집계함수
            = 비교연산자
                = (같다), <>, ^=, != (같지 않다) => 권장(<>)
                = <, >, <=, >=
                = 문자열이나 날짜까지 적용이 된다 hiredate >= '81/01/01'
                = 날짜형은 문자열 형식으로 저장되어 있다 -- 'YY/MM/DD'
            = 논리연산자 : AND, OR
                AND = 기간, 범위포함시에 주로 사용
                OR = 범위나 기간을 벗어날 경우에 주로 사용
                *** &&(입력기호), ||(문자열 결합)
            = 데이터베이스에서만 사용되는 연산자
                NOT : 부정연산자(!) => !를 사용하지 않는다
                NULL : 연산시에 NULL값인 경우에는 결과값이 NULL(연산처리가 안된다)
                    IS NULL, IS NOT NULL
                IN : OR가 여러개일 경우에 사용
                BETWEEN ~ AND : 기간이 범위를 출력할때
                LIKE : 검색
                    % => 글자수와 관련없음
                    _ => 한글자
                    '문자%' => startsWith
                    '%문자' => endsWitd
                    '%문자%' => contains
        3) 내장함수
        4) 조인 / 서브쿼리
*/