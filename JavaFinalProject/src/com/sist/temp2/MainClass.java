package com.sist.temp2;
/*
 *    자바 정리 => 웹 관련
 *    --------------------
 *    1) 변수
 *      ----------------------------------------------------
 *                   메모리에 저장되는 시점        사용범위
 *                   초기화되는 시
 *      ----------------------------------------------------
 *      멤버변수         메모리할				프로그램 종료시
 *      (인스턴스 변수)   new를 사용	
 *                     Class.forName()
 *      class ClassName {
 *      	[접근지정어] 데이터형 변수형
 *      	--------- 데이터 보호를 목적으로
 *      			  은닉화
 *      			  접근지정어는 보통 private
 *      }
 *      변수 => 메모리에 저장 / 메모리에서 읽기
 *             --------------   ---------------
 *                쓰기			읽기
 *                -----------------
 *                getter / setter
 *      => 사용법
 *         클래스 객체명 = new 클래스명();
 *         객체명.변수명
 *         ----------
 *         객체 = 인스턴스 => 동일 개념
 *      ---------------------------------------------
 *      정적변수			컴파일러가 컴파일
 *      (공유 변수,		JVM이 클래스 읽기
 *       클래스변수)		=> 메모리 할당이 자동
 *       
 *      => 메모리 할당없이 사용이 가능
 *      => 클ㄹ스명.변수명
 *      => 여러명이 같은 변수를 이용할 때 주로 사용
 *         ------------------------------
 *         웹 =>로고, 이미지 크기...
 *         서버 => 클라이언트 정보(IP)
 *         오라클(MySql => 데이터베이스) => 공유 (저장된 데이터는 static)
 *      ---------------------------------------------
 *      지역변수   ==> 메소드가 호출될때 메소드안에서만 사용이가
 *      (25page)
 *      변수 : 한개의 데이터를 저장하는 공간
 *      우선 => 변수명이 동일할때 우선 순위
 *      => 지역변수, 매개변수
 *         --------  --------
 *         
 *         
 *         ---------------------------------------
 *         메모리 공간에 저장 => 종류(데이터형)
 *         => 변수(70%) => 제어문, 연산자
 *         ---------------------------------------
 *         정수형
 *         		byte : 네트워크 통신, 파일입출력, 웹
 *         		------------------------------------
 *              ASC코드를 주로 사용 (char:1byte)
 *              웹브라우저 <============> 오라클
 *                           연결이안됨
 *                 |                        |
 *              사용자화면 출력         화면 출력 데이터저장
 *              
 *              웹브라우저 <====> 프로그램 언어(자바), C#, C/C++, 파이썬
 *                          연결  -------------------
 *              오라클 <=====> 자바
 *                       연결
 *              자격조건 : 스프링 가능자, 오라클 가능자
 *                         ------------- 자바포함 (스프링은 자바의 라이브러리)
 *                         => 어노테이션, 디자인패턴, XML파싱
 *                         => 스프링 (5,6 => 프레임워크 / 부트)
 *                         
 *              int : default => 컴퓨터에서 인식하는 숫자 (int인식)
 *              => 가장 많이 사용되는 정수형
 *              => 웹/윈도우는 정수를 인식하지 못한다 (문자열)
 *                 => 정수 변환 : Integer.parseInt("10")
 *              => 사용범위 : -21억~21억
 *              
 *              long : 빅데이터, 금융권, 회계(국세청)
 *                     => -2^63 ~ 2^63-1
 *                     
 *              ==> byte / int / long
 *         -------------------------------------------
 *         실수형 :
 *         			double : 소수점 15자리 이상 사용
 *                  => 컴퓨터 인식은 실수일 겨웅 (default)
 *         -------------------------------------------
 *         논리형 : true/false저장 => 조건문, 제어문에 많이 사용
 *         			boolean
 *         -------------------------------------------
 *         문자형 : char (2byte) ==> Unicode
 *         			문자표현이 많다 => 각국의 언어 사용이 가능
 *         			*** 한글은 1글자당 2byte를 가지고 있다
 *         			
 *         -------------------------------------------
 *         참조형 : 주소를 이용해서 데이터 관리
 *              배열 => 같은 데이터형만 저장이 가능 (1차원)
 *              클래스 => 다른 데이터형을 저장이 가능   
 *         -------------------------------------------
 *         
 *         기본형의 크기 
 *         		byte < int < long < double => 형변환
 *         		(boolean은 제외)
 *         		=> 수 표현에 따라 크기가 달라진다
 *         ----------------------------------------------30page
 *         
 *         변수생성 방법 (식별자) => 같은 메소드상에서는 같은 변수가 존재하지 않는다
 *         = 식별자
 *         		1) 알파벳 / 한글 사용 가능 (대소문자 구분)
 *         		2) 숫자 사용이 가능 (앞에 사용 금지)
 *         		3) 특수문자 사용 ( _, $)
 *         		4) 키워드는 사용 불가 (메소드명, 클래스명은 키워드가 아니다)
 *         		5) 변수에 공백이 없다
 *         		------------------------------------오라클, 자바스크립트에서도 동일
 *         				오라클 (변수 => 컬럼), 자바스크립트는 자동지정변수
 *         										ES6 => let, const
 *         										
 *      		------------------------------------25~37page
 *      
 *      		데이터 저장  =============> 데이터 처리 ============> 데이터 출력
 *      		-----------
 *      		
 *      		38page 연산자, 메소드
 *      		---------------------
 *      		자바에서 지원하는 연산자 (피연산자 / 연산자)
 *      		단항연산자
 *      			=> 피연산자가 한개일때
 *      			=> 증감연산자 (++, --)
 *      				1) 전위연산
 *      					++a
 *      				2) 후위연산
 *      					a++
 *      				----------- 오라클은 ++, --가 존재하지 않는
 *      			=> 부정연산 : ! => boolean으로 표현 
 *      							=> 조건문, 반복문에서 주로 사용
 *      							=> 오라클 : NOT, <> 
 *      			=> 형변환연산자 : (데이터형) => 변수앞에 설정한다
 *      				=> boolean은 사용이 불가능 
 *      				=> 클래스의 형변환
 *      				=> 모든 데이터형을 통합이 가능 : Object
 *      		이항연산자
 *      			=> 산술연산자 : 가장 많이 사용되는 연산자 
 *      				+, -, *, /, %
 *      				1) + : 실제 산술(덧셈), 문자열결합( "" )
 *      				2) / : 0으로 나눌 수 없다 
 *      				   정수 / 정수 = 정수
 *      				   ------------------
 *      				3) % : 왼쪽편의 부호를 따라간다
 *      			=> 비교연산자 : 조건문 => 계산 결과 : boolean
 *      				==, != , <, >, <=, >=
 *      				-------
 *      				오라클 : =, <>, ^=
 *      				자바스크립트 : ===, !==
 *      			=> 논리연산자 : &&(직렬) => 두개가 true일때 true,
 *      							||(병렬) => 둘중에 1개이상 	true일때 true
 *      							*** 효율적인 연산
 *      							&& => 앞에 조건 false => 뒤에 조건은 수행하지 않는다
 *      							---- 포함
 *      							|| => 앞에 조건 true => 뒤에 조건은 수행하지 않는다
 *      							---- 포함이 안된 경우
 *      			=> 대입연산자 : 결과값 대입
 *      							=, +=, -=
 *      							int a=10;
 *      							a+=10 ========> a=a+10
 *      		---------------------------------------------------------------
 *      		삼항연산자 : 웹에서 자주 사용 => if~else를 줄여서 사용
 *      					=> 웹, 게임
 *      		
 *     조건문
 *       단일 조건문 : 독립적 수행문장 (조건마다 따로 수행)
 *       -----------
 *       형식)
 *            if (조건문) => 조건문에 사용되는 연산자 
 *            {					부정연산자 / 비교연산자 / 논리연산자만 사용이 가능 
 *            	조건 => true일 경우 수행하는 문
 *            }
 *       선택 조건문 : true/false 나눠서 처리
 *            if (조건문) {
 *              true일때 수행 
 *            } else {
 *              false일때 수행 
 *            }
 *       ------------------------한줄로 줄여서 사용 : 삼항연산자 이용
 *       ------------------------가장 많이 사용되는 조건문
 *       다중 조건문 : 한문장으로 되어 있다
 *       			   해당 
 *      
 *       
 */
public class MainClass {

	public static void main(String[] args) {
		
	}

}
